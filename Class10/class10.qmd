---
title: "Class 10: Structural Bioinformatics (Pt. 1)"
name: "Georgina Canto-Encalada (A59021295)"
format: pdf
---

# PDB statistics

Download a CSV file from the PDB site (accessible from “Analyze” > “PDB Statistics” > “by Experimental Method and Molecular Type”

>Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy.

ANS: 93.26%


```{r}
pdb.df <- read.csv("Data Export Summary.csv", row.names=1)
```

Creation of a function to read 
```{r}
sum_column <- function(data_frame, column_name) {
  # Remove any non-numeric characters
  cleaned_column <- gsub("[^0-9.]", "", data_frame[[column_name]])
  
  # Convert the cleaned column to numeric
  numeric_column <- as.numeric(cleaned_column)
  
  # Sum the numeric values, handling any NA values that might arise during conversion
  sum(numeric_column, na.rm = TRUE)
  
}
```

```{r}
#Total xray
total_xray<-sum_column(pdb.df, "X.ray")

#Total EM
total_EM<-sum_column(pdb.df, "EM")

total_Total <- sum_column(pdb.df, "Total")

Percentage<-sum(total_xray,total_EM)/total_Total*100
Percentage

```


> Q2: What proportion of structures in the PDB are protein?

ANS: 86.65%

```{r}
protein<-as.numeric(pdb.df[1,"Total"])
proportion <- protein/total_Total*100
proportion
```

> Q3: Type HIV in the PDB website search box on the home page and determine how many HIV-1 protease structures are in the current PDB?

ANS: 23,471

# The PDB format

Now download the “PDB File” for the HIV-1 protease structure with the PDB identifier 1HSG. Using the terminal I typed the following command:

`less 1hsg.pdb`

# Visualizing the HIV-1 protease structure

## Using Mol to examine HIV-Pr

Working with Mol* tool using 1HSG as the protein to visualize



![A nice look of 1HSG.]("~\Downloads\1HSG.png")

Highlighting Asp 25 (D25) in both chains since they are critical for protease activity 

![Asp 25 (D25) in both chains.]("~\Downloads\1HSG (1).png")

## The important role of water

> Q4: Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?

The red spheres represent the Oxygen atoms. These visualization tools use just the oxygen atom to represent water molecule since it is larger and more significant than hydrogen atoms. 

> Q5: There is a critical “conserved” water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have

ANS: HOH 308

> Q6: Generate and save a figure clearly showing the two distinct chains of HIV-protease along with the ligand. You might also consider showing the catalytic residues ASP 25 in each chain and the critical water (we recommend “Ball & Stick” for these side-chains). Add this figure to your Quarto document.

![Asp 25 (D25) in both chains, critical water and two distinct chains of HIV-protease.]("~\Downloads\1HSG (3).png")

# Introduction to Bio3D in R

```{r}
library(bio3d)
```

## Reading PDB file data into R

```{r}
pdb <- read.pdb("1hsg")
pdb
```

> Q7: How many amino acid residues are there in this pdb object?

ANS: 198

> Q8: Name one of the two non-protein residues?

ANS: HOH

> Q9: How many protein chains are in this structure?

ANS: 2

Note that the attributes (+ attr:) of this object are listed on the last couple of lines. To find the attributes of any such object you can use:

```{r}
attributes(pdb)
```

To access these individual attributes we use the dollar-attribute name convention that is common with R list objects. For example, to access the atom attribute or component use pdb$atom:

```{r}
head(pdb$atom)
```

## Predicting functional motions of a single structure

Let’s read a new PDB structure of Adenylate Kinase and perform Normal mode analysis.

```{r}
adk <- read.pdb("6s36")
adk
```

Normal mode analysis (NMA) is a structural bioinformatics method to predict protein flexibility and potential functional motions (a.k.a. conformational changes).

```{r}
# Perform flexiblity prediction
m <- nma(adk)
m
```

```{r}
plot(m)
```

To view a “movie” of these predicted motions we can generate a molecular “trajectory” with the mktrj() function. We can now visualize the animation in Mol*

```{r}
mktrj(m, file="adk_m7.pdb")
```

# Comparative structure analysis of Adenylate Kinase

We will begin by first installing the packages we need for today’s session.

# Install packages in the R console NOT your Rmd/Quarto file

install.packages("bio3d")
install.packages("devtools")
install.packages("BiocManager")

BiocManager::install("msa")
devtools::install_bitbucket("Grantlab/bio3d-view")

> Q10. Which of the packages above is found only on BioConductor and not CRAN?

ANS: msa

> Q11. Which of the above packages is not found on BioConductor or CRAN?:

ANS: bio3d-view

>Q12. True or False? Functions from the devtools package can be used to install packages from GitHub and BitBucket? 

ANS: True

## Search and retrieve ADK structures

```{r}
aa <- get.seq("1ake_A")
aa
```

> Q13. How many amino acids are in this sequence, i.e. how long is this sequence? 

ANS: 214

Now we can use this sequence as a query to BLAST search the PDB to find similar sequences and structures.

```{r}
# Blast or hmmer search. It is not working when I do render
#b <- blast.pdb(aa)
```

```{r}
#hits <- plot.blast(b)
```



```{r}
# List out some 'top hits'
#head(hits$pdb.id)
```

Blast did not work. 

```{r}
hits <- NULL
hits$pdb.id <- c('1AKE_A','6S36_A','6RZE_A','3HPR_A','1E4V_A','5EJE_A','1E4Y_A','3X2S_A','6HAP_A','6HAM_A','4K46_A','3GMT_A','4PZL_A')
```

```{r}
# Download releated PDB files
files <- get.pdb(hits$pdb.id, path="pdbs", split=TRUE, gzip=TRUE)
```

## Align and superpose structures

Next we will use the `pdbaln()` function to align and also optionally fit (i.e. superpose) the identified PDB structures.

```{r}
# Align releated PDBs
pdbs <- pdbaln(files, fit = TRUE, exefile="msa")
```

```{r, fig.width=8, fig.height=6}
# Vector containing PDB codes for figure axis
ids <- basename.pdb(pdbs$id)

# Draw schematic alignment

plot(pdbs, labels=ids)
```

Figure 7: Schematic representation of alignment. Grey regions depict aligned residues, while white depict gap regions. The red bar at the top depict sequence conservation.

# Principal component analysis

PCA can be performed on the structural ensemble (stored in the pdbs object) with the function pca.xyz(), or more simply pca().

```{r}
# Perform PCA
pc.xray <- pca(pdbs)
plot(pc.xray)

```
Figure 9: Results of PCA on Adenylate kinase X-ray structures. Each dot represents one PDB structure.

Function rmsd() will calculate all pairwise RMSD values of the structural ensemble. This facilitates clustering analysis based on the pairwise structural deviation

```{r}

# Calculate RMSD
rd <- rmsd(pdbs)

# Structure-based clustering
hc.rd <- hclust(dist(rd))
grps.rd <- cutree(hc.rd, k=3)

plot(pc.xray, 1:2, col="grey50", bg=grps.rd, pch=21, cex=1)
```
Figure 10: Projection of Adenylate kinase X-ray structures. Each dot represents one PDB structure.























